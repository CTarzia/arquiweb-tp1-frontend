{"ast":null,"code":"import _regeneratorRuntime from \"/home/chiara/repos/arquiweb-tp1/react-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/chiara/repos/arquiweb-tp1/react-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction apiGet() {\n  return _apiGet.apply(this, arguments);\n}\n\nfunction _apiGet() {\n  _apiGet = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var url,\n        successCallback,\n        failureCallback,\n        response,\n        _args = arguments;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            url = _args.length > 0 && _args[0] !== undefined ? _args[0] : \"\";\n            successCallback = _args.length > 1 ? _args[1] : undefined;\n            failureCallback = _args.length > 2 ? _args[2] : undefined;\n            _context.next = 5;\n            return fetch(\"http://localhost:8080/\".concat(url)).then(function (res) {\n              return res.json();\n            }).then(function (json) {\n              if (json.status === 404) {\n                if (failureCallback) failureCallback();\n              } else {\n                if (successCallback) successCallback(json);\n                return json;\n              }\n            });\n\n          case 5:\n            response = _context.sent;\n            return _context.abrupt(\"return\", response);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _apiGet.apply(this, arguments);\n}\n\n;\n\nvar apiPost = function apiPost() {\n  var url = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var successCallback = arguments.length > 2 ? arguments[2] : undefined;\n  var failureCallback = arguments.length > 3 ? arguments[3] : undefined;\n  fetch(\"http://localhost:8080/\".concat(url), {\n    method: \"POST\",\n    body: JSON.stringify(data),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(function (res) {\n    return res.json;\n  }).then(function (json) {\n    if (json.status === 404) {\n      if (failureCallback) failureCallback();\n    } else {\n      if (successCallback) successCallback(json);\n    }\n  });\n};","map":{"version":3,"sources":["/home/chiara/repos/arquiweb-tp1/react-frontend/src/utils/services.js"],"names":["apiGet","url","successCallback","failureCallback","fetch","then","res","json","status","response","apiPost","data","method","body","JSON","stringify","headers"],"mappings":";;;SACeA,M;;;;;qEAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuBC,YAAAA,GAAvB,2DAA6B,EAA7B;AAAiCC,YAAAA,eAAjC;AAAkDC,YAAAA,eAAlD;AAAA;AAAA,mBACwBC,KAAK,iCAA0BH,GAA1B,EAAL,CACrBI,IADqB,CAChB,UAACC,GAAD;AAAA,qBAASA,GAAG,CAACC,IAAJ,EAAT;AAAA,aADgB,EAGrBF,IAHqB,CAGhB,UAACE,IAAD,EAAU;AACf,kBAAIA,IAAI,CAACC,MAAL,KAAgB,GAApB,EAAyB;AACxB,oBAAIL,eAAJ,EAAqBA,eAAe;AACpC,eAFD,MAEO;AACN,oBAAID,eAAJ,EAAqBA,eAAe,CAACK,IAAD,CAAf;AACrB,uBAAOA,IAAP;AACA;AACD,aAVqB,CADxB;;AAAA;AACOE,YAAAA,QADP;AAAA,6CAYQA,QAZR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAaC;;AAED,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAA2D;AAAA,MAA1DT,GAA0D,uEAApD,EAAoD;AAAA,MAAhDU,IAAgD,uEAAzC,EAAyC;AAAA,MAArCT,eAAqC;AAAA,MAApBC,eAAoB;AAC1EC,EAAAA,KAAK,iCAA0BH,GAA1B,GAAiC;AACrCW,IAAAA,MAAM,EAAE,MAD6B;AAErCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAF+B;AAGrCK,IAAAA,OAAO,EAAE;AACR,sBAAgB;AADR;AAH4B,GAAjC,CAAL,CAOEX,IAPF,CAOO,UAACC,GAAD;AAAA,WAASA,GAAG,CAACC,IAAb;AAAA,GAPP,EAQEF,IARF,CAQO,UAACE,IAAD,EAAU;AACf,QAAIA,IAAI,CAACC,MAAL,KAAgB,GAApB,EAAyB;AACxB,UAAIL,eAAJ,EAAqBA,eAAe;AACpC,KAFD,MAEO;AACN,UAAID,eAAJ,EAAqBA,eAAe,CAACK,IAAD,CAAf;AACrB;AACD,GAdF;AAeA,CAhBD","sourcesContent":["\nasync function apiGet (url = \"\", successCallback, failureCallback) {\n\tconst response = await fetch(`http://localhost:8080/${url}`)\n\t\t.then((res) => res.json())\n\n\t\t.then((json) => {\n\t\t\tif (json.status === 404) {\n\t\t\t\tif (failureCallback) failureCallback();\n\t\t\t} else {\n\t\t\t\tif (successCallback) successCallback(json);\n\t\t\t\treturn json;\n\t\t\t}\n\t\t});\n\treturn response;\n};\n\nconst apiPost = (url = \"\", data = {}, successCallback, failureCallback) => {\n\tfetch(`http://localhost:8080/${url}`, {\n\t\tmethod: \"POST\",\n\t\tbody: JSON.stringify(data),\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t},\n\t})\n\t\t.then((res) => res.json)\n\t\t.then((json) => {\n\t\t\tif (json.status === 404) {\n\t\t\t\tif (failureCallback) failureCallback();\n\t\t\t} else {\n\t\t\t\tif (successCallback) successCallback(json);\n\t\t\t}\n\t\t});\n};\n"]},"metadata":{},"sourceType":"module"}