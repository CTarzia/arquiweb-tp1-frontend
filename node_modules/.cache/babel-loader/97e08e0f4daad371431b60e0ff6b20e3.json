{"ast":null,"code":"import _toConsumableArray from \"/home/chiara/repos/arquiweb-tp1/react-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/chiara/repos/arquiweb-tp1/react-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/chiara/repos/arquiweb-tp1/react-frontend/src/screens/RestaurantManagement/UploadImages/index.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport DisplayImages from \"../DisplayImages\";\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\nimport PhotoCamera from '@mui/icons-material/PhotoCamera';\n\nvar UploadImages = function UploadImages(_ref) {\n  var restaurantId = _ref.restaurantId;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      dataUri = _useState2[0],\n      setDataUri = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      statusError = _useState4[0],\n      setStatusError = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      imagesLoading = _useState6[0],\n      setImagesLoading = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      photos = _useState8[0],\n      setPhotos = _useState8[1];\n\n  var fileToDataUri = function fileToDataUri(file) {\n    return new Promise(function (resolve, reject) {\n      var reader = new FileReader();\n\n      reader.onload = function (event) {\n        resolve(event.target.result);\n      };\n\n      reader.readAsDataURL(file);\n    });\n  };\n\n  useEffect(function () {\n    var fetchImages = function fetchImages(imageId) {\n      fetch(\"http://localhost:8080/imagen/\".concat(imageId)).then(function (response) {\n        return response.blob();\n      }).then(function (image) {\n        // Create a local URL of that image\n        var localUrl = URL.createObjectURL(image);\n        setPhotos(function (photos) {\n          return [].concat(_toConsumableArray(photos), [{\n            url: localUrl,\n            id: imageId\n          }]);\n        });\n        setImagesLoading(true);\n      });\n    };\n\n    fetch(\"http://localhost:8080/imagen/resto/\".concat(restaurantId)).then(function (response) {\n      return response.json();\n    }).then(function (imageIds) {\n      imageIds.map(fetchImages);\n    });\n  }, []);\n\n  var _onChange = function onChange(file) {\n    if (!file) {\n      setDataUri('');\n      return;\n    }\n\n    fileToDataUri(file).then(function (dataUri) {\n      setDataUri(dataUri);\n    });\n    var data = new FormData();\n    data.append('file', file);\n    fetch(\"http://localhost:8080/imagen/\".concat(restaurantId), {\n      method: \"POST\",\n      body: data\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {});\n    window.location.reload();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"upload-photo\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    style: {\n      display: 'none'\n    },\n    id: \"upload-photo\",\n    name: \"upload-photo\",\n    type: \"file\",\n    onChange: function onChange(event) {\n      return _onChange(event.target.files[0] || null);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    component: \"span\",\n    endIcon: /*#__PURE__*/React.createElement(PhotoCamera, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 75\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, \"A\\xF1adir imagen\")), imagesLoading ? /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }, photos.map(function (img) {\n    return /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(DisplayImages, {\n      img: img,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 33\n      }\n    }));\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }, \"Recuperando im\\xE1genes de su restaurante...\"));\n};\n\nexport default UploadImages;","map":{"version":3,"sources":["/home/chiara/repos/arquiweb-tp1/react-frontend/src/screens/RestaurantManagement/UploadImages/index.js"],"names":["React","useState","useEffect","DisplayImages","Grid","Button","PhotoCamera","UploadImages","restaurantId","dataUri","setDataUri","statusError","setStatusError","imagesLoading","setImagesLoading","photos","setPhotos","fileToDataUri","file","Promise","resolve","reject","reader","FileReader","onload","event","target","result","readAsDataURL","fetchImages","imageId","fetch","then","response","blob","image","localUrl","URL","createObjectURL","url","id","json","imageIds","map","onChange","data","FormData","append","method","body","res","window","location","reload","display","files","img"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport DisplayImages from \"../DisplayImages\";\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\nimport PhotoCamera from '@mui/icons-material/PhotoCamera';\n\n\n\nconst UploadImages = ({\n    restaurantId\n}) => {\n\n    const [dataUri, setDataUri] = useState('');\n    const [statusError, setStatusError] = useState(false);\n    const [imagesLoading, setImagesLoading] = useState(false);\n    const [photos, setPhotos] = useState([]);\n\n    const fileToDataUri = (file) => new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = (event) => {\n            resolve(event.target.result)\n        };\n        reader.readAsDataURL(file);\n    })\n\n    useEffect(() => {\n\n        const fetchImages = imageId => {\n            fetch(`http://localhost:8080/imagen/${imageId}`)\n                .then(response => response.blob())\n                .then(image => {\n                    // Create a local URL of that image\n                    const localUrl = URL.createObjectURL(image);\n                    setPhotos(photos => [...photos, { url: localUrl, id: imageId }]);\n                    setImagesLoading(true);\n                });\n        }\n\n        fetch(`http://localhost:8080/imagen/resto/${restaurantId}`)\n            .then(response => response.json())\n            .then(imageIds => {\n                imageIds.map(fetchImages)\n            });\n    }, []);\n\n\n    const onChange = (file) => {\n\n        if (!file) {\n            setDataUri('');\n            return;\n        }\n\n        fileToDataUri(file)\n            .then(dataUri => {\n                setDataUri(dataUri);\n            });\n\n        const data = new FormData()\n        data.append('file', file)\n\n        fetch(`http://localhost:8080/imagen/${restaurantId}`, {\n            method: \"POST\",\n            body: data\n        })\n            .then(res => res.json())\n            .then(data => { })\n        window.location.reload()\n\n    }\n\n    return (\n\n            <div>\n                <label htmlFor=\"upload-photo\">\n                    <input\n                        style={{ display: 'none' }}\n                        id=\"upload-photo\"\n                        name=\"upload-photo\"\n                        type=\"file\"\n                        onChange={(event) => onChange(event.target.files[0] || null)}\n                    />\n                    <Button variant=\"contained\" component=\"span\" endIcon={<PhotoCamera />}>\n                        Añadir imagen\n                    </Button>\n                </label>\n\n                {imagesLoading ? (\n                    <Grid container spacing={2}>\n                        {photos.map(img => (\n                            <Grid item xs={4}>\n                                <DisplayImages\n                                    img={img}\n                                />\n                            </Grid>\n                        ))}\n                    </Grid>\n                ) : (\n                    <div>Recuperando imágenes de su restaurante...</div>\n                )}\n                \n            </div>\n\n    );\n};\n\nexport default UploadImages"]},"metadata":{},"sourceType":"module"}